var parser = function () {
  function a(a, b) {
    for (; a.topState() !== b;)a.popState()
  }

  function b() {
    for (var a, b = 0, c = {}, d = arguments.length; d > b; b++)(a = arguments[b]) && Object.getOwnPropertyNames(a).forEach(function (b) {
      c[b] = a[b]
    });
    return c
  }

  function c(a, b, c, d) {
    if (c = c || a, "object" == typeof a && a)for (var e = 0, f = Object.getOwnPropertyNames(a), g = f[0]; void 0 !== g; g = f[++e])b.apply(c, [g, a[g], d]);
    return c
  }

  function d(a) {
    if (!(this instanceof d))return new d(a);
    var b;
    if (isNaN(a) || (this.num = parseFloat(a), this.unit = ""), "string" == typeof a) {
      if (b = a.match(/^\-?((\d+(\.\d+)?)|(\.\d+))/), !b)return a;
      this.num = parseFloat(b[0]), this.unit = a.substr(b[0].length)
    }
  }

  function e(a, b) {
    return this instanceof e ? (this.symbol = a.trim(), void(this.sheetName = b || "")) : new e(a, b)
  }

  function f(a, b, c) {
    return this instanceof f ? (this.left = a, c && (this.right = c), void(b && (this.optor = b))) : new f(a, b, c)
  }

  function g(a, b) {
    return this instanceof g ? (this.name = a, void(this.param = b || new h)) : new g(a, b)
  }

  function h() {
    if (!(this instanceof h))return h.fromArray(arguments);
    for (var a = 0, b = arguments.length; b > a; a++)this.add(arguments[a])
  }

  function i() {
    this.staticRules = {}, this.dynamicRules = {}, this.defValues = {}, this.includes = {}, this.nested = [], this.exts = []
  }

  function j(a, b) {
    i.apply(this), this.selector = a, this.addScope(b || new i)
  }

  function k(a) {
    this.name = a || ChangeSS.defaultSheetName, this.scopes = [], this.mixins = {}, this.vars = {}
  }

  function l() {
    return this instanceof l ? (this.vertexes = this.createList(), void(this.adjustList = this.createList())) : new l
  }

  function m() {
    this.yy = {}
  }

  var n = function (a, b, c, d) {
    for (c = c || {}, d = a.length; d--; c[a[d]] = b);
    return c
  }, o = [1, 11], p = [1, 10], q = [1, 8], r = [1, 4, 32, 40, 46], s = [1, 15], t = [1, 4, 24, 32, 40, 46], u = [1, 20], v = [1, 18], w = [14, 35, 42], x = [1, 4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 24, 27, 29, 31, 32, 35, 36, 37, 40, 46], y = [1, 4, 24, 27, 29, 31, 32, 36, 37, 40, 46], z = [1, 35], A = [1, 29], B = [1, 32], C = [1, 33], D = [1, 46], E = [1, 47], F = [1, 50], G = [1, 51], H = [1, 52], I = [1, 44], J = [1, 45], K = [27, 29, 31, 32, 36, 37], L = [1, 56], M = [24, 27, 29, 31, 32, 36, 37], N = [24, 27, 29, 31, 32, 35, 36, 37], O = [15, 24], P = [1, 4, 6, 8, 11, 14, 15, 16, 19, 20, 24, 27, 29, 31, 32, 36, 37, 40, 46], Q = [1, 66], R = [1, 67], S = [1, 68], T = [1, 69], U = [1, 4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 24, 27, 29, 31, 32, 36, 37, 40, 46], V = [1, 4, 6, 8, 10, 11, 14, 15, 16, 19, 20, 24, 27, 29, 31, 32, 36, 37, 40, 46], W = {
    trace: function () {
    },
    yy: {},
    symbols_: {
      error: 2,
      "var": 3,
      VAR: 4,
      "->": 5,
      LITERAL: 6,
      exp: 7,
      NUMBER: 8,
      inlineFunc: 9,
      "+": 10,
      "-": 11,
      "*": 12,
      "/": 13,
      "(": 14,
      ")": 15,
      FUNCNAME: 16,
      list: 17,
      property: 18,
      STRING: 19,
      URL: 20,
      assignPair: 21,
      ":": 22,
      assignList: 23,
      ";": 24,
      defParamList: 25,
      includeCall: 26,
      INCLUDE: 27,
      scopeBodyPart: 28,
      IDENT: 29,
      nestedStyle: 30,
      EXTENDS: 31,
      SELECTOR: 32,
      scopeBody: 33,
      scope: 34,
      "{": 35,
      "}": 36,
      "&": 37,
      style: 38,
      mixScope: 39,
      MIXIN: 40,
      selectors: 41,
      ",": 42,
      sheetPart: 43,
      sheet: 44,
      SHEET: 45,
      EOF: 46,
      $accept: 0,
      $end: 1
    },
    terminals_: {
      2: "error",
      4: "VAR",
      5: "->",
      6: "LITERAL",
      8: "NUMBER",
      10: "+",
      11: "-",
      12: "*",
      13: "/",
      14: "(",
      15: ")",
      16: "FUNCNAME",
      19: "STRING",
      20: "URL",
      22: ":",
      24: ";",
      27: "INCLUDE",
      29: "IDENT",
      31: "EXTENDS",
      32: "SELECTOR",
      35: "{",
      36: "}",
      37: "&",
      40: "MIXIN",
      42: ",",
      45: "SHEET",
      46: "EOF"
    },
    productions_: [0, [3, 3], [3, 1], [7, 1], [7, 1], [7, 1], [7, 3], [7, 3], [7, 3], [7, 3], [7, 2], [7, 3], [9, 3], [9, 4], [18, 1], [18, 1], [18, 1], [18, 1], [17, 1], [17, 2], [21, 3], [23, 1], [23, 3], [23, 2], [25, 2], [25, 3], [26, 3], [26, 2], [28, 3], [28, 1], [28, 1], [28, 2], [28, 4], [28, 2], [33, 1], [33, 2], [34, 3], [34, 4], [34, 3], [34, 2], [30, 2], [30, 1], [39, 3], [41, 1], [41, 3], [38, 2], [43, 1], [43, 1], [43, 1], [43, 2], [44, 3], [44, 1], [44, 2], [44, 2]],
    performAction: function (a, b, c, l, m, n) {
      var o = n.length - 1;
      switch (m) {
        case 1:
          this.$ = new e(n[o - 2], n[o]);
          break;
        case 2:
          this.$ = new e(n[o]);
          break;
        case 3:
          this.$ = new f(new d(n[o]));
          break;
        case 4:
        case 5:
          this.$ = new f(n[o]);
          break;
        case 6:
        case 7:
        case 8:
        case 9:
          this.$ = new f(n[o - 2], n[o - 1], n[o]);
          break;
        case 10:
          this.$ = new f(new d("0"), "-", n[o]);
          break;
        case 11:
        case 25:
        case 36:
          this.$ = n[o - 1];
          break;
        case 12:
          this.$ = new g(n[o - 2]);
          break;
        case 13:
          this.$ = new g(n[o - 3], n[o - 1].reduce());
          break;
        case 14:
          this.$ = n[o].resolve();
          break;
        case 18:
        case 43:
          this.$ = new h(n[o]);
          break;
        case 19:
          n[o - 1].push(n[o]);
          break;
        case 20:
          this.$ = {name: n[o - 2], value: n[o].resolve()};
          break;
        case 21:
          this.$ = {}, this.$[n[o].name] = n[o].value;
          break;
        case 22:
          n[o - 2][n[o].name] = n[o].value;
          break;
        case 24:
          this.$ = {};
          break;
        case 26:
          this.$ = {name: n[o - 1].toString(), value: n[o]};
          break;
        case 27:
          this.$ = {name: n[o].toString(), value: {}};
          break;
        case 28:
          this.$ = {name: n[o - 2], value: n[o].resolve(), type: "rule"};
          break;
        case 29:
          this.$ = {type: "style", value: n[o]};
          break;
        case 30:
          n[o].type = "include";
          break;
        case 31:
          this.$ = {type: "ext", name: n[o]};
          break;
        case 32:
          this.$ = {type: "ext", name: n[o - 2], sheetName: n[o]};
          break;
        case 34:
          this.$ = (new i).add(n[o]);
          break;
        case 35:
          this.$ = n[o - 1].add(n[o]);
          break;
        case 37:
          this.$ = n[o - 1].addDefValues(n[o - 3]);
          break;
        case 38:
          this.$ = (new i).addDefValues(n[o - 2]);
          break;
        case 39:
          this.$ = new i;
          break;
        case 40:
        case 45:
          this.$ = new j(n[o - 1], n[o]);
          break;
        case 42:
          this.$ = {name: n[o - 1], value: n[o]};
          break;
        case 44:
          n[o - 2].add(n[o]);
          break;
        case 46:
          this.$ = {type: "style", value: n[o]};
          break;
        case 47:
          n[o].type = "mix";
          break;
        case 48:
          n[o].type = "var";
          break;
        case 50:
          this.$ = new k(n[o - 1]);
          break;
        case 51:
          this.$ = (new k).add(n[o]);
          break;
        case 52:
          n[o - 1].add(n[o]);
          break;
        case 53:
          return this.$ = n[o - 1]
      }
    },
    table: [
      {3: 9, 4: o, 21: 6, 32: p, 38: 4, 39: 5, 40: q, 41: 7, 43: 3, 44: 1, 45: [1, 2]},
      {1: [3], 3: 9, 4: o, 21: 6, 32: p, 38: 4, 39: 5, 40: q, 41: 7, 43: 12, 46: [1, 13]},
      {6: [1, 14]},
      n(r, [2, 51], {24: s}),
      n(t, [2, 46]),
      n(t, [2, 47]),
      n(t, [2, 48]),
      {14: u, 25: 19, 34: 16, 35: v, 42: [1, 17]},
      {3: 21, 4: o},
      {22: [1, 22]},
      n(w, [2, 43]),
      n(x, [2, 2], {5: [1, 23]}),
      n(r, [2, 52], {24: s}),
      n(r, [2, 53]),
      {24: [1, 24]},
      n(t, [2, 49]),
      n(y, [2, 45]),
      {32: [1, 25]},
      {26: 31, 27: z, 28: 28, 29: A, 30: 30, 31: B, 32: p, 33: 26, 36: [1, 27], 37: C, 38: 34, 41: 7},
      {35: [1, 36]},
      {3: 9, 4: o, 15: [1, 37], 21: 39, 23: 38},
      {14: u, 25: 19, 34: 40, 35: v},
      {3: 48, 4: o, 6: D, 7: 43, 8: E, 9: 49, 11: F, 14: G, 16: H, 17: 41, 18: 42, 19: I, 20: J},
      {6: [1, 53]},
      n(r, [2, 50]),
      n(w, [2, 44]),
      {26: 31, 27: z, 28: 55, 29: A, 30: 30, 31: B, 32: p, 36: [1, 54], 37: C, 38: 34, 41: 7},
      n(y, [2, 39]),
      n(K, [2, 34], {24: L}),
      {22: [1, 57]},
      n(M, [2, 29]),
      n(M, [2, 30]),
      {32: [1, 58]},
      {14: u, 25: 19, 34: 59, 35: v},
      n(M, [2, 41]),
      {3: 60, 4: o},
      {26: 31, 27: z, 28: 28, 29: A, 30: 30, 31: B, 32: p, 33: 61, 36: [1, 62], 37: C, 38: 34, 41: 7},
      n(N, [2, 24]),
      {15: [1, 63], 24: [1, 64]},
      n(O, [2, 21]),
      n(t, [2, 42]),
      n([1, 15, 24, 32, 40, 46], [2, 20], {
        7: 43,
        3: 48,
        9: 49,
        18: 65,
        4: o,
        6: D,
        8: E,
        11: F,
        14: G,
        16: H,
        19: I,
        20: J
      }),
      n(P, [2, 18]),
      n([1, 4, 6, 8, 14, 15, 16, 19, 20, 24, 27, 29, 31, 32, 36, 37, 40, 46], [2, 14], {10: Q, 11: R, 12: S, 13: T}),
      n(P, [2, 15]),
      n(P, [2, 16]),
      n(P, [2, 17]),
      n(U, [2, 3]),
      n(U, [2, 4]),
      n(U, [2, 5]),
      {3: 48, 4: o, 7: 70, 8: E, 9: 49, 11: F, 14: G, 16: H},
      {3: 48, 4: o, 7: 71, 8: E, 9: 49, 11: F, 14: G, 16: H},
      {14: [1, 72]},
      n(x, [2, 1]),
      n(y, [2, 36]),
      n(K, [2, 35], {24: L}),
      n(M, [2, 33]),
      {3: 48, 4: o, 6: D, 7: 43, 8: E, 9: 49, 11: F, 14: G, 16: H, 17: 73, 18: 42, 19: I, 20: J},
      n(M, [2, 31], {5: [1, 74]}),
      n(M, [2, 40]),
      n(M, [2, 27], {25: 75, 14: u}),
      {26: 31, 27: z, 28: 55, 29: A, 30: 30, 31: B, 32: p, 36: [1, 76], 37: C, 38: 34, 41: 7},
      n(y, [2, 38]),
      n(N, [2, 25]),
      n(O, [2, 23], {3: 9, 21: 77, 4: o}),
      n(P, [2, 19]),
      {3: 48, 4: o, 7: 78, 8: E, 9: 49, 11: F, 14: G, 16: H},
      {3: 48, 4: o, 7: 79, 8: E, 9: 49, 11: F, 14: G, 16: H},
      {3: 48, 4: o, 7: 80, 8: E, 9: 49, 11: F, 14: G, 16: H},
      {3: 48, 4: o, 7: 81, 8: E, 9: 49, 11: F, 14: G, 16: H},
      n(U, [2, 10]),
      {10: Q, 11: R, 12: S, 13: T, 15: [1, 82]},
      {3: 48, 4: o, 6: D, 7: 43, 8: E, 9: 49, 11: F, 14: G, 15: [1, 83], 16: H, 17: 84, 18: 42, 19: I, 20: J},
      n(M, [2, 28], {7: 43, 3: 48, 9: 49, 18: 65, 4: o, 6: D, 8: E, 11: F, 14: G, 16: H, 19: I, 20: J}),
      {6: [1, 85]},
      n(M, [2, 26]),
      n(y, [2, 37]),
      n(O, [2, 22]),
      n(V, [2, 6], {12: S, 13: T}),
      n(V, [2, 7], {12: S, 13: T}),
      n(U, [2, 8]),
      n(U, [2, 9]),
      n(U, [2, 11]),
      n(U, [2, 12]),
      {3: 48, 4: o, 6: D, 7: 43, 8: E, 9: 49, 11: F, 14: G, 15: [1, 86], 16: H, 18: 65, 19: I, 20: J},
      n(M, [2, 32]),
      n(U, [2, 13])
    ],
    defaultActions: {},
    parseError: function (a, b) {
      if (!b.recoverable)throw new Error(a);
      this.trace(a)
    },
    parse: function (a) {
      function b() {
        var a;
        return a = o.lex() || m, "number" != typeof a && (a = c.symbols_[a] || a), a
      }

      var c = this, d = [0], e = [null], f = [], g = this.table, h = "", i = 0, j = 0, k = 0, l = 2, m = 1, n = f.slice.call(arguments, 1), o = Object.create(this.lexer), p = {yy: {}};
      for (var q in this.yy)Object.prototype.hasOwnProperty.call(this.yy, q) && (p.yy[q] = this.yy[q]);
      o.setInput(a, p.yy), p.yy.lexer = o, p.yy.parser = this, "undefined" == typeof o.yylloc && (o.yylloc = {});
      var r = o.yylloc;
      f.push(r);
      var s = o.options && o.options.ranges;
      this.parseError = "function" == typeof p.yy.parseError ? p.yy.parseError : Object.getPrototypeOf(this).parseError;
      for (var t, u, v, w, x, y, z, A, B, C = {}; ;) {
        if (v = d[d.length - 1], this.defaultActions[v] ? w = this.defaultActions[v] : ((null === t || "undefined" == typeof t) && (t = b()), w = g[v] && g[v][t]), "undefined" == typeof w || !w.length || !w[0]) {
          var D = "";
          B = [];
          for (y in g[v])this.terminals_[y] && y > l && B.push("'" + this.terminals_[y] + "'");
          D = o.showPosition ? "Parse error on line " + (i + 1) + ":\n" + o.showPosition() + "\nExpecting " + B.join(", ") + ", got '" + (this.terminals_[t] || t) + "'" : "Parse error on line " + (i + 1) + ": Unexpected " + (t == m ? "end of input" : "'" + (this.terminals_[t] || t) + "'"), this.parseError(D, {
            text: o.match,
            token: this.terminals_[t] || t,
            line: o.yylineno,
            loc: r,
            expected: B
          })
        }
        if (w[0]instanceof Array && w.length > 1)throw new Error("Parse Error: multiple actions possible at state: " + v + ", token: " + t);
        switch (w[0]) {
          case 1:
            d.push(t), e.push(o.yytext), f.push(o.yylloc), d.push(w[1]), t = null, u ? (t = u, u = null) : (j = o.yyleng, h = o.yytext, i = o.yylineno, r = o.yylloc, k > 0 && k--);
            break;
          case 2:
            if (z = this.productions_[w[1]][1], C.$ = e[e.length - z], C._$ = {
                first_line: f[f.length - (z || 1)].first_line,
                last_line: f[f.length - 1].last_line,
                first_column: f[f.length - (z || 1)].first_column,
                last_column: f[f.length - 1].last_column
              }, s && (C._$.range = [f[f.length - (z || 1)].range[0], f[f.length - 1].range[1]]), x = this.performAction.apply(C, [h, j, i, p.yy, w[1], e, f].concat(n)), "undefined" != typeof x)return x;
            z && (d = d.slice(0, -1 * z * 2), e = e.slice(0, -1 * z), f = f.slice(0, -1 * z)), d.push(this.productions_[w[1]][0]), e.push(C.$), f.push(C._$), A = g[d[d.length - 2]][d[d.length - 1]], d.push(A);
            break;
          case 3:
            return !0
        }
      }
      return !0
    }
  };
  ChangeSS = function (a) {
    function b(a, b) {
      return b = b || {keepResults: !1}, c(a, b.keepResults).map(function (a) {
        return a.toString()
      }).join("\n")
    }

    function c(a, c) {
      c || d();
      var e = h();
      return b.parse(a).forEach(function (a) {
        e.add(f(a))
      }), ChangeSS.link(e), e
    }

    function d() {
      j = {}
    }

    function f(a) {
      if (a instanceof k)return g.sheet(a.name).merge(a);
      throw"not implement"
    }

    var g, i, j = {};
    return b.error = {
      notExist: function (a) {
        throw Error("cannot get:" + a)
      }
    }, b.eval = c, b.merge = f, b.get = function (a, c) {
      switch (a = a || b.defaultSheetName, c = (c || "").toLowerCase()) {
        case"mixin":
        case"scope":
          return g.fromFullName(a, c);
        case"var":
          return g.variable(a);
        case"styles":
          return g.styles(a);
        default:
          return g.sheet(a)
      }
    }, b.opt = {}, g = {
      sheet: function (a) {
        a = a || b.defaultSheetName;
        var c = j[a];
        return c || (j[a] = new k(a))
      }, fromFullName: function (a, b) {
        var c, d = a.split("->"), e = d[1];
        return e ? (c = j[e]) ? c.get(d[0], b) || ChangeSS.error.notExist(a) : ChangeSS.error.notExist(a) : void 0
      }, variable: function (a) {
        var b, c = a.indexOf("->"), d = a.substr(c + 2), e = a.substr(0, c);
        return d && (b = j[d]) && e ? b.vars[e] : void 0
      }, styles: function (a) {
        var b = a.indexOf("->"), c = j[a.substr(b + 2)] || ChangeSS.error.notExist(a);
        return c.getStyles(a.substr(0, b))
      }
    }, i = {
      Var: function (a, b) {
        var c = g.sheet(a.sheetName);
        c.vars[a.symbol] = b, a.sheetName = ""
      }, sheet: function (a) {
        var c = a.name || b.defaultSheetName, d = g.sheet(c);
        d.merge(a)
      }
    }, b.parse = function (b) {
      return b.split(/\={4,}/g).filter(function (a) {
        return a
      }).map(function (b) {
        return a.parse(b).validate()
      })
    }, b.add = function (a, b) {
      return a instanceof k ? i.sheet(a) : a instanceof e && i.Var(a, b), this
    }, b.getType = function (a, b) {
      var c;
      if (!a)return ChangeSS.TYPE.NONE;
      if ("string" == typeof a)return ChangeSS.TYPE.KEYWORD;
      if (c = a._type)return c;
      if (b)return ChangeSS.TYPE.NONE;
      throw Error("unknown type")
    }, b
  }(W), ChangeSS.defaultSheetName = "default", ChangeSS.assign = function (a, d) {
    var e, f = ChangeSS.TYPE, g = b(a);
    d = b(d);
    do e = !1, c(g, function (a, b) {
      switch (ChangeSS.getType(b)) {
        case f.KEYWORD:
        case f.LENGTH:
          d[a] = b, delete g[a];
          break;
        case f.LIST:
          if (g[a] = b = b.resolve(d), b.hasVars)return;
          d[a] = b.toString(), delete g[a];
          break;
        case f.NONE:
          throw"unknown type";
        default:
          if (!b.canResolve(d))return;
          g[a] = b.resolve(d)
      }
      e = !0
    }), e || (e = Object.getOwnPropertyNames(g).some(function (a) {
      g[a].canResolve(d)
    })); while (e);
    return {$resolved: d, $unresolved: g}
  }, ChangeSS.traceLog = !0, function (a) {
    return a.errorHandler = {
      expect: function (a, b, c, d) {
        var e = a.lexer;
        return e.upcomingInput() == b ? c : (d && Error("expect:" + b + "after" + a.matched), !1)
      }
    }
  }(W), ChangeSS.TYPE = {
    NONE: "no",
    EXP: "exp",
    VAR: "var",
    LENGTH: "len",
    FUNC: "fun",
    KEYWORD: "keyword",
    LIST: "list"
  }, d.parse = function (a, b) {
    if (a instanceof d)return a.clone();
    var c = new d(a);
    return void 0 !== b && (c.unit = b.trim()), isNaN(c.num) ? void 0 : c
  }, d.toFixed = function (a, b) {
    var c = Number(a).toFixed(b || d.fractionalDigitals).match(/^\-?\d+(\.(0*[1-9])+)?/);
    return c ? c[0] : 0 / 0
  }, d.fractionalDigitals = 4, d.convertTable = {
    rad: {
      pi: function (a) {
        return a / Math.PI
      }, deg: function (a) {
        return a / Math.PI * 180
      }
    }, deg: {
      pi: function (a) {
        return a / 180
      }, rad: function (a) {
        return a / 180 * Math.PI
      }
    }, pi: {
      rad: function (a) {
        return a * Math.PI
      }, deg: function (a) {
        return 180 * a
      }
    }
  }, d.prototype = {
    _type: ChangeSS.TYPE.LENGTH, clone: function () {
      return new d(this.num + this.unit)
    }, opt: function (a, b) {
      var c, e = this.unit, f = b.unit;
      if (!b)return this.clone();
      switch (c = f && e !== f ? b.convert(f, e) : b.num, e = e || f, a) {
        case"+":
          return new d(this.num + c + e);
        case"-":
          return new d(this.num - c + e);
        case"*":
          return new d(this.num * c + e);
        case"/":
          return new d(this.num / c + e);
        default:
          throw"unkonwn optor:" + a
      }
    }, convert: function (a, b) {
      var c = this.num, e = d.convertTable[(b || this.unit).toLowerCase()];
      return e && (e = e[a.toLowerCase()]) ? e(c) : c
    }, toString: function () {
      return isNaN(this.num) ? "NaN" : d.toFixed(this.num) + this.unit
    }, reduce: function () {
      return this
    }, resolve: function () {
      return this.clone()
    }, get value() {
      return this.toString()
    }
  }, ChangeSS.Length = d, e.prototype = function (a) {
    function b(a) {
      return d(a, !0) === c
    }

    var c = a.VAR, d = ChangeSS.getType, f = a.LENGTH, g = a.KEYWORD;
    return e.isVar = b, {
      _type: ChangeSS.TYPE.VAR, toString: function () {
        var a = this.sheetName;
        return a ? this.symbol + "->" + a : this.symbol
      }, get hasVars() {
        return !0
      }, clone: function () {
        return new e(this.symbol, this.sheetName)
      }, reduce: function () {
        return this
      }, findRef: function () {
        for (var a = this, c = new l; b(a) && a.sheetName;)c.hasVertex(a) && ChangeSS.error.cyclicInherit(c.vertexes.map(function (a) {
          return "[" + a + "]->"
        }), c), c.addVertex(a), a = ChangeSS.get(a.toString(), "var");
        return a
      }, resolve: function (a) {
        var c, d = this.findRef();
        if (b(d) || void 0 == d ? a && (c = a[this.symbol]) : c = d, b(c)) {
          if (b(d = c.findRef()))return this.clone();
          c = d
        }
        return c || this.clone()
      }, getVarNames: function (a) {
        return a = a || [], h.arrayAdd(a, this.symbol), a
      }, canResolve: function (a) {
        var b = d(this.resolve(a));
        return b == f || b == g
      }
    }
  }(ChangeSS.TYPE), ChangeSS.Var = e, f.prototype = function () {
    var a = ChangeSS.TYPE;
    return {
      _type: a.EXP, opt: function (a, b) {
        var c = this.left;
        return c instanceof d && b instanceof d ? this.left = c.opt(a, b) : (this.optor = a, this.right = b), this
      }, get value() {
        if (this.hasVars)return void 0;
        switch (this.type) {
          case a.KEYWORD:
          case a.LENGTH:
            return this.left;
          case a.FUNC:
          case a.LIST:
            return this.left.value;
          default:
            return this.left.opt(this.optor, this.right)
        }
      }, reduce: function () {
        var b = this.left.resolve(), c = this.right ? this.right.resolve() : void 0, d = ChangeSS.getType(c), e = ChangeSS.getType(b);
        return d == a.NONE ? e == a.EXP ? (this.left = b.left, this.right = b.right, this.optor = b.optor) : (this.left = b, delete this.optor, delete this.right) : e == a.LENGTH && d == e ? (this.left = b.opt(this.optor, c), delete this.optor, delete this.right) : (this.left = b, this.right = c), this.clearVarNames()
      }, canResolve: function (a) {
        return this.getVarNames().every(function (b) {
          return b.canResolve(a)
        })
      }, clearVarNames: function () {
        delete this.variables;
        var a = this.left, b = this.right;
        return a.clearVarNames && a.clearVarNames(), b && b.clearVarNames && b.clearVarNames(), this
      }, get hasVars() {
        var a = this.getVarNames();
        return a.length > 0
      }, resolve: function () {
        function a(a, b, e) {
          switch (d(a)) {
            case c.VAR:
            case c.FUNC:
            case c.EXP:
            case c.LIST:
              return e.clearVarNames(), a.resolve(b);
            case c.KEYWORD:
            case c.LENGTH:
              return a;
            case c.NONE:
              return void 0
          }
        }

        function b(a) {
          return a.clone ? a.clone() : a
        }

        var c = ChangeSS.TYPE, d = ChangeSS.getType;
        return function (e) {
          var g = a(this.left, e, this), h = a(this.right, e, this), i = d(g), j = d(h);
          if (this.clearVarNames(), j == c.NONE)return b(g);
          switch (i) {
            case c.VAR:
            case c.FUNC:
            case c.EXP:
            case c.LIST:
              return new f(b(g), this.optor, b(h))
          }
          switch (j) {
            case c.VAR:
            case c.FUNC:
            case c.EXP:
            case c.LIST:
              return new f(b(g), this.optor, b(h));
            case c.LENGTH:
              if (i == c.LENGTH)return b(g).opt(this.optor, b(h))
          }
          Error("invalid Exp:left->" + i + ";right->" + j)
        }
      }(), getVarNames: function (a) {
        var b;
        if (!(b = this.variables)) {
          var c = this.left, d = this.right;
          b = this.variables = [], c instanceof e ? h.arrayAdd(b, c) : c.getVarNames && c.getVarNames(b), d && (d instanceof e ? h.arrayAdd(b, d) : d.getVarNames && d.getVarNames(b))
        }
        return a = a || [], b.forEach(function (b) {
          h.arrayAdd(a, b)
        }), a
      }, clone: function () {
        var a, b = this.left, c = new f(b.clone ? b.clone(!0) : b);
        return void 0 !== (a = this.right) && (c.right = a.clone ? a.clone(!0) : a, c.optor = this.optor), c
      }, toString: function () {
        var a = this.left, b = this.right;
        return "string" != typeof a && (a = a.toString()), b ? ("string" != typeof b && (b = b.toString()), a + this.optor + b) : a
      }
    }
  }(), ChangeSS.Exp = f, c(Math, function (a, b, c) {
    if ("function" == typeof b) {
      var e = c.arg[a], f = c.res[a];
      this[a] = function (a) {
        var c = d.parse(b.apply(Math, a.map(function (a) {
          return e ? e(a) : a.num
        })), a[0].unit);
        return f ? f(c) : c
      }
    }
  }, g.Func = {}, function () {
    var a = [function (a) {
      return a.convert("rad")
    }, function (a) {
      return a.convert(a.unit = "deg", "rad"), a
    }, function (a) {
      return a.unit = "", a
    }];
    return {
      arg: {sin: a[0], cos: a[0], tan: a[0]},
      res: {asin: a[1], acos: a[1], atan: a[1], sin: a[2], cos: a[2], tan: a[2]}
    }
  }()), g.prototype = {
    _type: ChangeSS.TYPE.FUNC, getVarNames: function (a) {
      return this.param.getVarNames(a)
    }, resolve: function (a, b) {
      var c, e, f = this.param.resolve(a, b), i = this.name;
      return c = g.Func[i], f instanceof h || (f = new h(f)), c && f.canResolve(a) ? c(f.map(function (b) {
        return d.parse(b.resolve ? b.resolve(a) : b)
      })).resolve() : (e = new g(this.name, f), f.hasVars ? e : e.toString())
    }, get value() {
      var a = this.paramValue;
      return void 0 == a ? void 0 : this.name + a
    }, reduce: function () {
      var a = this.param.resolve();
      return this.param = a instanceof h ? a : new h(a), this
    }, clone: function () {
      var a = this.param;
      return new g(this.name, a.clone ? a.clone() : a)
    }, canResolve: function (a) {
      var b = this.param;
      return "string" == typeof b ? !0 : b.canResolve(a)
    }, toString: function () {
      return this.name + this.paramString
    }, get paramString() {
      var a = this.param.toString();
      return "(" + a.replace(/\s+\,\s*/g, ",") + ")"
    }, get paramValue() {
      var a = this.param.value;
      return void 0 == a ? void 0 : "(" + a.replace(/\s+/gi, ",") + ")"
    }
  }, ChangeSS.InlineFunc = g, h.addOrMerge = function () {
    function a(a, b) {
      return b
    }

    function b(a) {
      return "string" == typeof a ? function (b, c) {
        return b[a] === c[a]
      } : a || function (a, b) {
        return a === b
      }
    }

    return function (c, d, e, f) {
      "function" != typeof f && (f = a);
      for (var g, h = 0, i = c.length, j = b(e); i > h; h++)if (j(d, c[h]))return g = f(c[h], d), void 0 !== g && (c[h] = g), c;
      return c.push(d), c
    }
  }(), h.arrayAdd = function (a, b) {
    var c = !0;
    if (b instanceof Array)for (var d = 0, e = b.length; e > d; d++)c &= arguments.callee(a, b[d]); else {
      if (a.indexOf(b) > -1)return !1;
      a.push(b)
    }
    return c
  }, h.uniquePush = function (a) {
    for (var b = 1, c = !1, d = arguments[1], e = h.arrayAdd; d; d = arguments[++b])for (var f = 0, g = d.length; g > f; f++)e(a, d[f]) && (c = !0);
    return c
  }, h.fromObject = function (a, b) {
    b instanceof Array || (b = [b]);
    for (var c = 0, d = new h, e = b[0]; e; e = b[++c])Object.getOwnPropertyNames(e).forEach(function (b) {
      d.push(b + a, e[b])
    });
    return d
  }, h.fromArray = function (a) {
    var b = new h;
    return Array.prototype.push.apply(b, a), b
  }, h.prototype = function (a) {
    a.add = function (a) {
      return this.indexOf(a) > -1 ? !1 : (this.push(a), !0)
    }, a.remove = function (a) {
      var b = this.indexOf(a);
      return b > -1 ? (this.splice(b, 1), !0) : !1
    }, a.canResolve = function (a) {
      return a = a || {}, this.every(function (b) {
        return b.canResolve ? b.canResolve(a) : !0
      })
    }, a.clone = function () {
      return b(this, function (a, b) {
        return a.push(b.clone ? b.clone(!0) : b), a
      }, new h)
    }, a.copy = function (a) {
      return Array.isArray(a) ? (this.splice(0, this.length), Array.prototype.push.apply(this, a)) : this.splice(0, this.length, a), this
    }, a.resolve = function (a) {
      var b, c = new h;
      return this.forEach(function (d) {
        b = c[c.length - 1], d = d.resolve ? d.resolve(a) : d, "string" == typeof d && "string" == typeof b ? c[c.length - 1] = b + " " + d : c.push(d)
      }), 1 == c.length ? c[0].resolve ? c[0].resolve(a) : c[0] : c
    }, a.getVarNames = function (a) {
      return a = a || [], this.forEach(function (b) {
        b.hasVars && b.getVarNames(a)
      }), a
    }, Object.defineProperty(a, "value", {
      get: function () {
        for (var a, b = 0, c = [], d = this[0]; d; d = this[++b]) {
          if (a = d.resolve ? d.resolve() : d, void 0 == a)return void 0;
          c.push(a)
        }
        return c.length ? c.join(" ").replace(/[\s\r\n\t\f]+/g, " ").replace(/\,+/g, ",") : ""
      }
    }), Object.defineProperty(a, "resolved", {
      get: function () {
        return this.every(function (a) {
          return a instanceof d || "string" == typeof a
        })
      }
    }), Object.defineProperty(a, "hasVars", {
      get: function () {
        return this.some(function (a) {
          return a.hasVars
        })
      }
    }), a.toString = function () {
      return this.join(" ").replace(/[\r\n\s\t\f]+/gi, " ")
    };
    var b = function (a, b, c) {
      return Array.prototype.reduce.apply(a, [b, c])
    };
    return a.reduce = function (a, c) {
      return 0 == arguments.length ? this.copy(this.map(function (a) {
        return a.reduce ? a.reduce() : a
      })) : b(this, a, c)
    }, a.toParamList = function () {
      return this.copy(this.reduce().filter(function (a) {
        return "," != a
      }))
    }, a._type = ChangeSS.TYPE.LIST, a
  }(Object.create([])), ChangeSS.List = h, function (a) {
    function b(a) {
      return a.replace(/[\r\n\t\f\s]+/gi, " ").trim()
    }

    function c(a) {
      return a.split("->").map(b)
    }

    a.trimSelector = b, a.splitGlobalName = c
  }(i), i.prototype = {
    selectors: [""], toString: function () {
      function a(a) {
        return a = a || window ? "\r\n" : "", function (c) {
          return c.selector + "{" + a + b(c).join(a) + "}"
        }
      }

      function b(a) {
        return c(a, function (a, b) {
          this.push(a + ":" + b + ";")
        }, [])
      }

      return function (b, c) {
        return this.resolve(b).map(a(c))
      }
    }(), get value() {
      var a = this.toString();
      return a.match(/^\{[\s\r\n\t\f;]*\}$/, a) ? void 0 : a
    }, get globalName() {
      var a = this.sheetName;
      return a ? (this.symbol || this.selector) + "->" + a : void 0
    }, setSheetName: function (a) {
      this.sheetName = a, this.nested.forEach(function (b) {
        b.setSheetName(a)
      })
    }, get paramString() {
      var a = [];
      return c(this.defValues, function (b, c) {
        a.push(b + ":" + c)
      }), a.length ? "(" + a.join(",") + ")" : ""
    }, add: function (a) {
      switch (a.type.toLowerCase()) {
        case"rule":
          return this.addRule(a.name, a.value);
        case"def":
          return this.addDefValues(a.name, a.value);
        case"style":
          return this.addStyle(a.value);
        case"include":
          return this.addInclude(a.name, a.value);
        case"ext":
          return this.addExt(a.name, a.sheetName);
        case"mix":
          return this.addMix(a.value)
      }
      return this
    }, addExt: function (a, b) {
      var c = a.split("->").map(i.trimSelector);
      return a = c[0], b = b || c[1], b && (a += "->" + b), h.arrayAdd(this.exts, a), this
    }, addRule: function (a, b) {
      return b.hasVars ? this.dynamicRules[a] = b : this.staticRules[a] = b.toString(), this
    }, addDefValues: function (a, b) {
      var e;
      return "string" == typeof a ? (b instanceof h && 1 == b.length ? b = b[0] : b.resolve && (e = b.resolve()), this.defValues[a] = d.parse(e) || b) : c(a, function (a, b) {
        this.addDefValues(a, b)
      }, this), this
    }, addStyle: function (a) {
      return a instanceof i && (this.nested.push(a), this.sheetName && a.setSheetName(this.sheetName)), this
    }, addInclude: function (a, b) {
      return this.includes[a] = b, this
    }, canResolve: function (a) {
      return a = this.mixParam(a || {}), Object.getOwnPropertyNames(this.dynamicRules).every(function (b) {
        return this[b].canResolve(a)
      }, this.dynamicRules)
    }, validateSelector: function () {
      function a() {
        return this.selectors
      }

      function b(b) {
        var d, e;
        return b ? (e = this.selectors, d = [], b.forEach(function (a) {
          e.forEach(function (b) {
            b = b.replace(a, ""), d.push(" " == b[0] ? b.substr(1) : "&" + b)
          })
        })) : d = this.selectors, this.nested.forEach(function (a) {
          a.backtraceSelector(d)
        }), this._selector = null, this.backtraceSelector = a, this.validateSelector = c, this.selectors = d
      }

      function c(c) {
        var d, e;
        return c ? (d = [], e = this.selectors, c.forEach(function (a) {
          e.forEach(function (b) {
            d.push("&" == b[0] ? b.replace("&", a) : a + " " + b)
          })
        }), this.selectors = d) : d = this.selectors, this.nested.forEach(function (a) {
          a.validateSelector(d)
        }), this._selector = null, this.validateSelector = a, this.backtraceSelector = b, d
      }

      return c
    }(), backtraceSelector: function () {
      return this.selectors
    }, clone: function () {
      function a(a, b) {
        this[a] = b.clone ? b.clone(!0) : b
      }

      return function () {
        var b = new i;
        return b.validateSelector(), c(this.staticRules, a, b.staticRules), c(this.dynamicRules, a, b.dynamicRules), c(this.defValues, a, b.defValues), c(this.includes, a, b.includes), b.nested = this.nested.map(function (a) {
          return a.clone()
        }), b.exts = this.exts.slice(), b.selectors = this.selectors.slice(), b
      }
    }(), reduce: function () {
      var a, b = this.staticRules;
      return c(this.dynamicRules, function (c, d) {
        a = d.value, void 0 !== a && (delete this[c], b[c] = a)
      }), this
    }, remove: function (a) {
      return f.isVar(a) ? delete this.defValues[a] : this.staticRules.hasOwnProperty(a) ? delete this.staticRules[a] : this.dynamicRules.hasOwnProperty(a) ? delete this.dynamicRules[a] : void 0
    }, getVarNames: function (a) {
      return a = a || [], c(this.dynamicRules, function (b, c) {
        c.getVarNames(a)
      }), a
    }, resolve: function () {
      function a() {
        ChangeSS.traceLog && console.log.apply(console, arguments)
      }

      function d(d, g, i) {
        var m, n = j(d, !0, g, i), o = b(d.staticRules), p = d.selectors.join(","), q = n.$resolved;
        return c(d.dynamicRules, function (b, c) {
          !o.hasOwnProperty(b) && c.canResolve(q) ? o[b] = c.resolve(q).toString() : a("cannot resolve rule " + b + ":" + c + " in:", d)
        }), m = [
          {rules: o, selector: p}
        ], c(d.includes, function (a, b) {
          var d = ChangeSS.get(a, "mixin") || ChangeSS.error.notExist(a), g = {};
          c(ChangeSS.assign(b, q).$resolved, function (a, c) {
            b[a] && (g[a] = c)
          }), f(d, g, p).forEach(function (a) {
            k(a.rules) && h.addOrMerge(m, a, "selector", e)
          })
        }), m.filter(function (a) {
          return l || k(a.rules)
        })
      }

      function e(a, c) {
        return k(c.rules) && (a.rules = b(c.rules, a.rules)), a
      }

      function f(a, b, c) {
        a.backtraceSelector(), a.selectors = c.split(","), a.validateSelector();
        var d = a.resolve(b);
        return d
      }

      function g(a, b) {
        return a !== b && a ? a.nested[a.nested.indexOf(b) + 1] || 0 : 0
      }

      function i(a, b) {
        var c = 0, e = [], f = [], h = [];
        do(c = g(a, c)) ? (f.push(a), h.push(j(a, !1, h, b)), a = c, c = 0) : (e.unshift.apply(e, d(a, h, b)), a = g(f[f.length - 1], a), a || (c = a = f.pop(), h.pop())); while (a);
        return e
      }

      function j(a, c, d, e) {
        var f = d[d.length - 1] || {}, g = b(f, a.defValues, e);
        return c ? ChangeSS.assign(g) : g
      }

      function k(a) {
        return a && Object.getOwnPropertyNames(a).length > 0
      }

      var l = !1;
      return Object.defineProperty(ChangeSS.opt, "keepEmptyResult", {
        set: function (a) {
          l = !!a
        }, get: function () {
          return l
        }
      }), function (a) {
        return a ? a.$resolved && (a = b(a.$unresolved, a.$resolved)) : a = {}, i(this, a)
      }
    }()
  }, ChangeSS.Scope = i, j.prototype = function (a) {
    var c, d = a.clone;
    return c = Object.create(a), Object.defineProperty(c, "selector", {
      get: function () {
        return this._selector || (this._selector = this.selectors.join(","))
      }, set: function (a) {
        "string" == typeof a && (a = a.split(",")), a && (this.selectors = a.map ? a.map(i.trimSelector) : [i.trimSelector(a)], this._selector = null)
      }
    }), Object.defineProperty(c, "value", {
      get: function () {
        var a = this.getBodyString();
        return "{}" == a ? void 0 : this.selector + a
      }
    }), c.addScope = function (a) {
      if (a instanceof i) {
        this.defValues = b(this.defValues, a.defValues), this.staticRules = b(this.staticRules, a.staticRules), this.dynamicRules = b(this.dynamicRules, a.dynamicRules), this.includes = b(this.includes, a.includes), this.exts.push.apply(this.exts, a.exts);
        for (var c = 0, d = a.nested, e = this.nested, f = d[0]; f; f = d[++c])e.push(f)
      }
      return this
    }, c.clone = function () {
      return new j(this.selectors, d.apply(this))
    }, c.getStyles = function (a) {
      var b;
      return 0 == a.indexOf(b = this.selector) ? a === b ? [this] : this.nested.reduce(function (b, c) {
        return b.push.apply(b, c.getStyles(a)), b
      }, []) : []
    }, c
  }(i.prototype), k.prototype = function (a) {
    return a.add = function (a) {
      var b, c = a.type;
      if ("var" == c) {
        var d = a.value;
        b = a.name, b.sheetName == this.name && (b.sheetName = ""), e.isVar(d) && !d.sheetName && (d.sheetName = this.name), this.vars[b.toString()] = a.value
      } else if ("style" == c)this.scopes.push(a.value), a.value.setSheetName(this.name); else {
        if ("mix" != c)throw"unknown type";
        var f = a.value;
        b = a.name, b.sheetName == this.name && (b.sheetName = ""), f.symbol = b.symbol, f.isMixin = !0, f.setSheetName(this.name), this.mixins[b.toString()] = f
      }
      return this
    }, a.resolve = function (a) {
      var c = ChangeSS.assign(b(this.vars, a)), d = b(c.$unresolved, c.$resolved);
      return this.scopes.reduce(function (a, b) {
        return a.push.apply(a, b.resolve(d)), a
      }, [])
    }, a.toString = function (a) {
      return this.resolve(a).map(function (a) {
        var b, d = [];
        return c(a.rules, function (a, b) {
          d.push(a + ":" + b + ";")
        }), b = d.length ? "{\n*\n}" : "{*}", a.selector + b.replace("*", d.join("\n"))
      }).join("\n")
    }, a.merge = function (a) {
      return this.vars = b(this.vars, a.vars), this.scopes = this.scopes.concat(a.scopes.map(function (a) {
        var b = a.clone();
        return a.sheetName && b.setSheetName(a.sheetName), b
      })), this.mixins = b(this.mixins, a.mixins), this
    }, a.validate = function () {
      return this.scopes.forEach(function (a) {
        a.validateSelector()
      }), this
    }, a.get = function (a, b) {
      if ("scope" != b && "$" == a[0])return "mixin" == b ? this.mixins[a] : "var" == b ? this.vars[a] : this.mixins[a] || this.vars[a];
      for (var c = 0, d = this.scopes, e = d[0]; e; e = d[++c])if (e.selector == a)return e
    }, a.getStyles = function (a) {
      return this.scopes.reduce(function (b, c) {
        return b.push.apply(b, c.getStyles(a)), b
      }, [])
    }, a
  }({}), l.prototype = {
    createList: function () {
      return new h
    }, addVertex: function () {
      for (var a = 0, b = arguments.length; b > a; a++)this.vertexes.add(arguments[a]) && this.adjustList.push(this.createList());
      return this
    }, removeVertex: function (a) {
      var b = this.vertexIndex(a);
      return b > -1 && (this.vertexes.splice(b, 1), this.adjustList.slice(b, 1)), this
    }, hasVertex: function (a) {
      return this.vertexes.indexOf(a) > -1
    }, isIsolated: function (a) {
      var b = this.vertexIndex(a);
      return b > -1 ? 0 == this.adjustList[b].length : void 0
    }, vertexIndex: function (a) {
      return this.vertexes.indexOf(a)
    }, addEdge: function (a, b) {
      return a === b && ChangeSS.error.cyclicInherit([a, b]), this.addVertex(a, b).adjustList[this.vertexIndex(a)].add(this.vertexIndex(b)), this
    }, addEdges: function (a) {
      for (var b = 0, c = a.length; c > b; b += 2)this.addEdge(a[b], a[b + 1]);
      return this
    }, removeEdge: function (a, b, c) {
      var d = this.adjustList[this.vertexIndex(a)];
      return d ? d.remove(this.vertexIndex(b)) : (c && (this.isIsolated(a) && this.removeVertex(a), this.isIsolated(b) && this.removeVertex(b)), this)
    }, adjustVertexes: function (a) {
      var b = this.vertexes;
      return this.adjustList[this.vertexes.indexOf(a)].map(function (a) {
        return b[a]
      })
    }, mergePaths: function () {
      function a(a, b) {
        var c, d, e;
        if ((c = b.length - (e = a.length)) <= 0)return !1;
        for (d = 0; e > d; d++)if (a[d] !== b[c + d])return !1;
        return !0
      }

      return function (b) {
        var c, d = 1;
        for (b.sort(function (a, b) {
          return a.length > b.length
        }); d;)d = 0, c = b.length, b = b.filter(function (e, f) {
          for (f; c > f; f++)if (a(e, b[f]))return !(d = 1);
          return !0
        });
        return b
      }
    }(), convertPathsData: function (a) {
      var b = this.vertexes;
      return a.map(function (a) {
        return a.map(function (a) {
          return b[a]
        })
      })
    }, detectCircle: function () {
      function a(c, d, e) {
        var f = d.from;
        if (e)return e;
        if (c.indexOf(f) > -1)return c.push(f), c;
        c.push(f);
        for (var g = 0, h = d.to, i = h.length; i > g && !e; g++)e = a(c.slice(), b[h[g]]);
        return e
      }

      var b = [];
      return function (c) {
        b = c.reduce(function (a, b) {
          return a[b.from] = b, a
        }, []);
        for (var d, e = 0, f = c[0]; f && !d; f = c[++e])d = a([], f, d);
        return d
      }
    }(), getPaths: function (a) {
      for (var b, c = this.adjustList, d = this.vertexes, e = d.map(function (a, b) {
        return {from: b, to: c[b].slice()}
      }), f = new Array(e.length), g = 1, h = new Array(e.length), i = 0, j = e.length; j > i; i++)h[i] = [];
      for (; g;)g = !1, e = e.filter(function (a) {
        var b, c = a.from;
        return 0 == a.to.length ? (b = h[c]) ? (f[c] = b.length ? b.map(function (a) {
          return [c].concat(a)
        }) : [
          [c]
        ], g = !(h[c] = 0), !1) : !1 : (a.to = a.to.filter(function (a) {
          var b = f[a];
          return b ? (h[c] = h[c].concat(b), !(g = !0)) : !0
        }), !0)
      });
      if (e.length) {
        if (b = this.detectCircle(e).map(function (a) {
            return d[a]
          }), !(a instanceof Array))throw Error("circle detected:" + b.join("->"));
        a.push.apply(a, b)
      }
      return this.convertPathsData(this.mergePaths(f.reduce(function (a, b) {
        return a.push.apply(a, b), a
      }, [])))
    }
  }, ChangeSS.Graph = l, ChangeSS.link = function () {
    function a(a) {
      var b, c = a.getPaths(b = []);
      return b.length && ChangeSS.error.cyclicInherit(b.map(function (a) {
        return "[" + (a.globalName || a.selector || a.symbol) + "]"
      }).join("->"), a), c
    }

    function b(a, b) {
      return a.indexOf("->") > -1 ? a : (b || Error("sheetName need"), a + "->" + b)
    }

    ChangeSS.error.cyclicInherit = function (a) {
      throw Error("Cyclic inherits detected:" + a)
    };
    var d, e, f;
    return f = function () {
      function a(a, b, c) {
        var d, e = a;
        -1 == (d = a.indexOf("->")) ? e += "->" + this.name : (ChangeSS.get(a.substr(d + 2))[c][a.substr(0, d)] = b, delete this[c][a]), b.globalName = e
      }

      function d(a, e) {
        !a.sheetName, c(a.includes, function (a, c) {
          delete this[a], this[b(a, e)] = c
        }, a.includes), a.exts = a.exts.map(function (a) {
          return b(a, e)
        }), a.nested.forEach(function (a) {
          d(a, e)
        })
      }

      function e(b) {
        var e = b.name;
        c(b.vars, a, b, "vars"), c(b.mixins, function (c, f) {
          a.apply(b, [c, f, "mixins"]), d(f, e)
        }), b.scopes.forEach(function (a) {
          d(a, e)
        })
      }

      return e
    }(), d = function () {
      function b(a, c) {
        var e;
        h.arrayAdd(a.exts, c.exts), c.nested.forEach(function (c) {
          e = new j(c.selectors), a.addStyle(e), e.resolve = d, e.validateSelector(a.selectors), b(e, c)
        })
      }

      function d() {
        return []
      }

      function e(a) {
        for (var c = a.length - 1; c > 0; c--)b(a[c - 1], a[c])
      }

      function f(a, b) {
        return c(a.includes, function (c) {
          var d = ChangeSS.get(c, "mixin") || ChangeSS.error.notExist(c);
          b.addEdge(a, d)
        }), a.nested.forEach(function (a) {
          f(a, b)
        }), b
      }

      function g(b, d) {
        b.forEach(function (a) {
          a.scopes.forEach(function (a) {
            f(a, d)
          }), c(a.mixins, function (a, b) {
            f(b, d)
          })
        }), a(d).forEach(e)
      }

      return g
    }(), e = function () {
      function b(a, b) {
        var c = a.clone();
        return b.add({value: c, type: "style"}), c
      }

      function c(a) {
        for (var c = 0, d = a[c], e = a[c + 1]; e; d = a[++c], e = a[c + 1])e.sheetName !== d.sheetName && (e = b(e, ChangeSS.get(d.sheetName))), h.arrayAdd(e.selectors, d.selector), e._selector = null;
        return a
      }

      function d(a, b) {
        a.sheetName || Error("no sheetName"), a.exts.forEach(function (c) {
          ChangeSS.get(c, "styles").forEach(function (c) {
            b.addEdge(a, c)
          })
        }), a.nested.forEach(function (a) {
          d(a, b)
        })
      }

      function e(b, e) {
        b.forEach(function (a) {
          a.scopes.forEach(function (a) {
            d(a, e)
          })
        }), a(e).forEach(c)
      }

      return e
    }(), function (a) {
      var b, c;
      return b = new l, c = new l, a.forEach(f), d(a, b), e(a, c), a
    }
  }();
  var X = function () {
    var b = {
      EOF: 1,
      parseError: function (a, b) {
        if (!this.yy.parser)throw new Error(a);
        this.yy.parser.parseError(a, b)
      },
      setInput: function (a, b) {
        return this.yy = b || this.yy || {}, this._input = a, this._more = this._backtrack = this.done = !1, this.yylineno = this.yyleng = 0, this.yytext = this.matched = this.match = "", this.conditionStack = ["INITIAL"], this.yylloc = {
          first_line: 1,
          first_column: 0,
          last_line: 1,
          last_column: 0
        }, this.options.ranges && (this.yylloc.range = [0, 0]), this.offset = 0, this
      },
      input: function () {
        var a = this._input[0];
        this.yytext += a, this.yyleng++, this.offset++, this.match += a, this.matched += a;
        var b = a.match(/(?:\r\n?|\n).*/g);
        return b ? (this.yylineno++, this.yylloc.last_line++) : this.yylloc.last_column++, this.options.ranges && this.yylloc.range[1]++, this._input = this._input.slice(1), a
      },
      unput: function (a) {
        var b = a.length, c = a.split(/(?:\r\n?|\n)/g);
        this._input = a + this._input, this.yytext = this.yytext.substr(0, this.yytext.length - b), this.offset -= b;
        var d = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1), this.matched = this.matched.substr(0, this.matched.length - 1), c.length - 1 && (this.yylineno -= c.length - 1);
        var e = this.yylloc.range;
        return this.yylloc = {
          first_line: this.yylloc.first_line,
          last_line: this.yylineno + 1,
          first_column: this.yylloc.first_column,
          last_column: c ? (c.length === d.length ? this.yylloc.first_column : 0) + d[d.length - c.length].length - c[0].length : this.yylloc.first_column - b
        }, this.options.ranges && (this.yylloc.range = [e[0], e[0] + this.yyleng - b]), this.yyleng = this.yytext.length, this
      },
      more: function () {
        return this._more = !0, this
      },
      reject: function () {
        return this.options.backtrack_lexer ? (this._backtrack = !0, this) : this.parseError("Lexical error on line " + (this.yylineno + 1) + ". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n" + this.showPosition(), {
          text: "",
          token: null,
          line: this.yylineno
        })
      },
      less: function (a) {
        this.unput(this.match.slice(a))
      },
      pastInput: function () {
        var a = this.matched.substr(0, this.matched.length - this.match.length);
        return (a.length > 20 ? "..." : "") + a.substr(-20).replace(/\n/g, "")
      },
      upcomingInput: function () {
        var a = this.match;
        return a.length < 20 && (a += this._input.substr(0, 20 - a.length)), (a.substr(0, 20) + (a.length > 20 ? "..." : "")).replace(/\n/g, "")
      },
      showPosition: function () {
        var a = this.pastInput(), b = new Array(a.length + 1).join("-");
        return a + this.upcomingInput() + "\n" + b + "^"
      },
      test_match: function (a, b) {
        var c, d, e;
        if (this.options.backtrack_lexer && (e = {
            yylineno: this.yylineno,
            yylloc: {
              first_line: this.yylloc.first_line,
              last_line: this.last_line,
              first_column: this.yylloc.first_column,
              last_column: this.yylloc.last_column
            },
            yytext: this.yytext,
            match: this.match,
            matches: this.matches,
            matched: this.matched,
            yyleng: this.yyleng,
            offset: this.offset,
            _more: this._more,
            _input: this._input,
            yy: this.yy,
            conditionStack: this.conditionStack.slice(0),
            done: this.done
          }, this.options.ranges && (e.yylloc.range = this.yylloc.range.slice(0))), d = a[0].match(/(?:\r\n?|\n).*/g), d && (this.yylineno += d.length), this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: d ? d[d.length - 1].length - d[d.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + a[0].length
          }, this.yytext += a[0], this.match += a[0], this.matches = a, this.yyleng = this.yytext.length, this.options.ranges && (this.yylloc.range = [this.offset, this.offset += this.yyleng]), this._more = !1, this._backtrack = !1, this._input = this._input.slice(a[0].length), this.matched += a[0], c = this.performAction.call(this, this.yy, this, b, this.conditionStack[this.conditionStack.length - 1]), this.done && this._input && (this.done = !1), c)return c;
        if (this._backtrack) {
          for (var f in e)this[f] = e[f];
          return !1
        }
        return !1
      },
      next: function () {
        if (this.done)return this.EOF;
        this._input || (this.done = !0);
        var a, b, c, d;
        this._more || (this.yytext = "", this.match = "");
        for (var e = this._currentRules(), f = 0; f < e.length; f++)if (c = this._input.match(this.rules[e[f]]), c && (!b || c[0].length > b[0].length)) {
          if (b = c, d = f, this.options.backtrack_lexer) {
            if (a = this.test_match(c, e[f]), a !== !1)return a;
            if (this._backtrack) {
              b = !1;
              continue
            }
            return !1
          }
          if (!this.options.flex)break
        }
        return b ? (a = this.test_match(b, e[d]), a !== !1 ? a : !1) : "" === this._input ? this.EOF : this.parseError("Lexical error on line " + (this.yylineno + 1) + ". Unrecognized text.\n" + this.showPosition(), {
          text: "",
          token: null,
          line: this.yylineno
        })
      },
      lex: function () {
        var a = this.next();
        return a ? a : this.lex()
      },
      begin: function (a) {
        this.conditionStack.push(a)
      },
      popState: function () {
        var a = this.conditionStack.length - 1;
        return a > 0 ? this.conditionStack.pop() : this.conditionStack[0]
      },
      _currentRules: function () {
        return this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1] ? this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules : this.conditions.INITIAL.rules
      },
      topState: function (a) {
        return a = this.conditionStack.length - 1 - Math.abs(a || 0), a >= 0 ? this.conditionStack[a] : "INITIAL"
      },
      pushState: function (a) {
        this.begin(a)
      },
      stateStackSize: function () {
        return this.conditionStack.length
      },
      options: {},
      performAction: function (b, c, d, e) {
        switch (d) {
          case 0:
            break;
          case 1:
            return 40;
          case 2:
            return 27;
          case 3:
            return this.begin("EXP"), 45;
          case 4:
            return this.begin("EXT"), 31;
          case 5:
            return this.begin("EXP"), 5;
          case 6:
            return this.popState(), 32;
          case 7:
            return 4;
          case 8:
            return 32;
          case 9:
            break;
          case 10:
            return this.begin("EXP"), 22;
          case 11:
            return 24;
          case 12:
            return this.popState(), 35;
          case 13:
            return this.popState(), 36;
          case 14:
            return 14;
          case 15:
            return 15;
          case 16:
            return 22;
          case 17:
            return 6;
          case 18:
            return 42;
          case 19:
            return 37;
          case 20:
            return 8;
          case 21:
            return a(this, "INITIAL"), 24;
          case 22:
            return "STRING";
          case 23:
            return "URL";
          case 24:
            return 16;
          case 25:
            return 10;
          case 26:
            return 11;
          case 27:
            return 12;
          case 28:
            return 13;
          case 29:
            return 6;
          case 30:
            return 6;
          case 31:
            return 29;
          case 32:
            return "EOF"
        }
      },
      rules: [/^(?:(\/\*[\s\S]*?\*\/|\/\/.*?[\r\n]))/, /^(?:@mixin\b)/, /^(?:@include\b)/, /^(?:@sheetname\b)/, /^(?:@extend\b)/, /^(?:->)/, /^(?:(([_a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))|[\.#\*\>\+])((([_a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))|[\.#\*\>\+])|[\s>\+\~@\^\$\|\=\[\]\'\"\(\)\r\n\t\f])*?(?=[\;\}\{]))/, /^(?:(\$(([_a-zA-Z]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))([_a-zA-Z0-9]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))*)))/, /^(?:((([_a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))|[\.#\*\>\+])(((([_a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))|[\.#\*\>\+])|[\s>\+\~@\^\$\|\=\[\]\'\"\(\)\r\n\t\f])|(:(:+|\w+-|\b\w+\b(?!\())))*?(?=(\((\$(([_a-zA-Z]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))([_a-zA-Z0-9]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))*)):)|\{|,)))/, /^(?:([\s\r\n\t\f]))/, /^(?::)/, /^(?:;+)/, /^(?:\{)/, /^(?:\})/, /^(?:\()/, /^(?:\))/, /^(?::)/, /^(?:,)/, /^(?:,)/, /^(?:&:*((([_a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))|[\.#\*\>\+])(((([_a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))|[\.#\*\>\+])|[\s>\+\~@\^\$\|\=\[\]\'\"\(\)\r\n\t\f])|(:(:+|\w+-|\b\w+\b(?!\())))*?(?=(\((\$(([_a-zA-Z]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))([_a-zA-Z0-9]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))*)):)|\{|,)))/, /^(?:((\d+(\.\d+)?)|(\.\d+))(px|pc|px|in|cm|mm|deg|pi|em|ex|rad|s|%)?)/, /^(?:;+)/, /^(?:("|')[\s\S]*?(\1))/, /^(?:(url\(.*?\)|url\((("|')[\s\S]*?(\1))\)))/, /^(?:-?(([_a-z]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))([_a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))*)(?=\([^$]))/, /^(?:\+)/, /^(?:-)/, /^(?:\*)/, /^(?:\/)/, /^(?:#([0-9a-fA-F])+)/, /^(?:(([_a-z]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))([_a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))*))/, /^(?:(-?(([_a-z]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))([_a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}(\r\n|[ \t\r\n\f])?)|\\[ -~\200-\377]))*)))/, /^(?:$)/],
      conditions: {
        INITIAL: {
          rules: [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 31, 32],
          inclusive: !0
        },
        EXP: {
          rules: [0, 1, 2, 3, 4, 5, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32],
          inclusive: !0
        },
        EXT: {rules: [0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 18, 19, 20, 31, 32], inclusive: !0}
      }
    };
    return b
  }();
  return W.lexer = X, m.prototype = W, W.Parser = m, new m
}();
if (module !== undefined) module.exports = ChangeSS;