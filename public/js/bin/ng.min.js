window.app = {
  ngModule: angular.module("br", []), cfg: function () {
    function a(a) {
      return document.querySelector(a) || {}
    }

    var b = a("#cfg"), c = b.innerHTML, d = JSON.parse(c);
    return b.innerHTML = "", d.isMobile = !!a("#isMobile").value, d
  }()
}, angular.module("br").controller("bannerController", ["$scope", "imgFactory", "cfgFactory", "glFactory", function (a, b, c, d) {
  function e(b) {
    var c = b ? "beginLoading" : "endLoading";
    a.$broadcast(c), a.waiting = b
  }

  function f(a, b) {
    for (var c = 0, d = a[0]; d; d = a[++c])if (d.name === b)return d
  }

  a.waiting = a.waitingScene = 0, a.scenes = c.scenes, a.states = [], a.modes = [], a.covering = 1, a.chooseScene = function (b) {
    a.modes = b.modes, a.curScene = b, a.chooseMode(f(b.modes, b.defMode) || b.modes[0]), a.waitingScene = 1, d.restoreCamera(), a.$root.$broadcast("sceneChange", b)
  }, a.chooseMode = function (c) {
    d.setABK.apply(null, c.ABK), a.states = c.states, a.lgNames = c.lgNames, d.lgNum = c.res.length, a.$broadcast("dropTitleChange", {
      selected: c.name,
      role: "mode",
      mode: c
    }), a.chooseState(f(c.states, c.defState) || c.states[0]), e(!0), b.get(c.res).then(function (b) {
      d.imgs = b, e(!1), a.covering = 0, a.waitingScene = 0
    }, function (a) {
      alert("加载图片失败"), console.log(a)
    })
  }, a.chooseState = function (b) {
    d.weights = b.weights, d.lums = b.lums, d.tems = b.tems, a.$broadcast("stateChange", b), a.$broadcast("dropTitleChange", {
      selected: b.name,
      role: "state"
    })
  }, a.$on("selectedChange", function (b, c) {
    var d = c.to;
    switch (c.scope.role) {
      case"scene":
        return a.chooseScene(d);
      case"mode":
        return a.chooseMode(d);
      case"state":
        return a.chooseState(d)
    }
  })
}]), angular.module("br").factory("cfgParser", function () {
  function a(a, c) {
    var d = {name: c};
    i.unshift(a), f("defMode", d, 1), g(a.mode, b, d.modes = []), i.shift(), j.scenes.push(d)
  }

  function b(a, b) {
    var h, j = {name: b};
    i.unshift(a), d(["ABK", "res", "dir", "baseTem"], j), j.lgNames = j.lgNames || j.res.map(e), f("defState", j, 1), g(a.state, c, j.states = []), i.shift(), h = j.dir, j.res = j.res.map(function (a) {
      return h + a
    }), this.push(j)
  }

  function c(a, b) {
    "string" == typeof a && (a = l[a]), a = a || {};
    var c = {name: b};
    i.unshift(a), d("weights,lums,tems,temMin,temMax,temStep,mutable".split(","), c), i.shift(), this.push(c)
  }

  function d(a, b, c) {
    a.forEach(function (a) {
      f(a, b, c)
    })
  }

  function e(a) {
    return a.substring(0, a.lastIndexOf("."))
  }

  function f(a, b, c) {
    if (!b.hasOwnProperty(a)) {
      for (var d, e = 0, f = i[0]; f; f = i[++e])if (f.hasOwnProperty(a) && void 0 !== (d = f[a]))return b[a] = d;
      if (!c)throw Error("require:" + a + " in " + b.name)
    }
  }

  function g(a, b, c, d) {
    c = void 0 === c ? a : c;
    for (var e, f = 0, g = Object.getOwnPropertyNames(a), h = g.length; h > f; f++)b.apply(c, [a[e = g[f]], e, d])
  }

  var h = window.app.cfg, i = [h], j = {scenes: []}, k = h.scenes, l = h.states;
  return i[1] = {
    ABK: [2, 1, 1],
    defTem: 3e3,
    dir: "",
    temMax: 5e3,
    temMin: 2e3,
    temStep: 100,
    mutable: !1,
    weights: 1,
    tems: 3e3,
    lums: 100,
    baseTem: 3e3
  }, g(k, a), j
}), angular.module("br").config(["imgFactoryProvider", function (a) {
  a.mobileRoute(window.app.cfg.isMobile)
}]), angular.module("br").controller("dropController", ["$scope", function (a) {
  a.toggle = function () {
    a.showMenu = !a.showMenu
  }, a.showMenu = !1, a.selectItem = function (b) {
    var c = a.items[b], d = a.selectedItem;
    d !== c && (a.selected = c.name, a.$emit("selectedChange", {
      from: d,
      to: a.selectedItem = c,
      scope: a
    })), a.showMenu = !1
  }, a.$on("dropTitleChange", function (b, c) {
    c.role == a.role && (a.selected = c.selected)
  })
}]), angular.module("br").directive("drop", function () {
  return {
    restrict: "EA",
    replace: !0,
    scope: {iconSrc: "@iconSrc", items: "=items", selected: "@title", role: "@role"},
    controller: "dropController",
    template: "<div class='drop' ng-click='toggle();'><div class='dropHeader'><img ng-src='{{iconSrc}}'><p>{{selected}}</p></div><div ng-mouseleave='toggle()' class='menu' ng-show='showMenu&&items&&items.length'><p ng-repeat='item in items' data-item ng-click='selectItem($index);'><b></b>{{item.name}}</p></div></div>"
  }
}), angular.module("br").provider("imgFactory", function () {
  var a, b = {}, c = document.createElement("canvas").getContext("2d");
  this.mobileRoute = function (b) {
    a = b ? "mobile\\resources\\" : "resources\\"
  }, this.$get = ["$q", "$http", "glFactory", function (d, e, f) {
    function g(a) {
      var b, e = a.naturalHeight, f = a.naturalWidth;
      if (e > j || f > j) {
        b = c.canvas, b.height = b.width = j, c.clearRect(0, 0, j, j), c.drawImage(a, 0, 0, f, e, 0, 0, j, j);
        var g = new Image, h = d.defer();
        return g.src = b.toDataURL("image/png"), g.onload = g.onerror = function () {
          g.complete ? (console.log("change img size:" + g.naturalWidth + "/" + g.naturalHeight), h.resolve(g)) : h.resolve(g)
        }, h.promise
      }
      return a
    }

    function h(c) {
      var e = d.defer(), f = new Image;
      return f.onload = function () {
        e.resolve(b[c] = g(f))
      }, f.onerror = function (a) {
        b[c] = new Error(a), e.reject(a)
      }, f.src = a + c, console.log("begin load img:" + c), e.promise
    }

    function i(a) {
      var c = b[a];
      return c ? c instanceof Image ? d(function (a) {
        a(c)
      }) : c instanceof Error ? d.reject(c) : c : b[a] = h(a)
    }

    var j = f.MAX_TEXTURE_SIZE;
    return console.postInfo && (console.postInfo = function (a, b) {
      e.get("/debug/" + a + ":" + b)
    }), {
      get: function (a) {
        return "string" == typeof a ? i(a) : a.map ? d.all(a.map(function (a) {
          return i(a)
        })) : void 0
      }, setImgSize: function (a) {
        isNaN(a) || (j = parseInt(j, 10))
      }
    }
  }]
}).factory("cfgFactory", ["cfgParser", function (a) {
  return a
}]), angular.module("br").factory("glFactory", ["$rootScope", function (a) {
  function b() {
    f.dirty = !0
  }

  function c(a, b) {
    for (var c = 0, d = new Array(b); b > c; c++)d[c] = a;
    return d
  }

  function d(a) {
    return a instanceof Image && a.complete
  }

  var e, f, g, h, i = document.domEle = document.documentElement, j = document.querySelector("body>menu"), k = document.querySelector("#glcvs");
  return e = bgl.pls(k, {
    maxLG: 6, normalLocation: {
      x: 0, get y() {
        return j.clientHeight
      }, get w() {
        return i.clientWidth
      }, get h() {
        return i.clientHeight - j.clientHeight
      }
    }
  }), g = k.getContext("webgl"), document.addEventListener("keydown", function (a) {
    a.preventDefault()
  }), k.addEventListener("webglcontextlost", function (a) {
    console.warn("gl lost context"), a.preventDefault()
  }), f = {weights: [], lums: [], imgs: [], baseTem: 3e3, tems: [], lgNum: 0}, e.onupdate = function () {
    if (f.dirty) {
      var b = f.imgs, c = f.lums, d = f.weights, g = f.tems;
      a.$$phase || a.$digest(), e.reset(f.lgNum);
      for (var h, i = 0, j = f.baseTem, k = 0, l = b.length; l > i; i++)e.changeImg(i, b[i]), e.changeIntensity(i, c[i] * (h = d[i] || 0)), k += h, e.changeTem(i, g[i], j);
      e.changeSumIntensity(k), f.dirty = !1
    }
  }, e.reset(0), e.adjustCanvas(k, !1), document.addEventListener("resize", function () {
    e.adjustCanvas(k, e.expanded)
  }), window.app.glDebug = e.debug, window.app.camera = e.camera, h = {
    get lgNum() {
      return f.lgNum
    }, set lgNum(a) {
      a = parseInt(a), isNaN(a) || b(f.lgNum = a)
    }, set baseTem(a) {
      isNaN(a) || f.baseTem == a || b(f.baseTem = a)
    }, get baseTem() {
      return f.baseTem
    }, get MAX_TEXTURE_SIZE() {
      return e.maxTextureSize
    }, set imgs(a) {
      if (!a.every(d))throw Error("invalid imgs");
      e.reset(a.length), b(f.imgs = a.slice())
    }, get weights() {
      return f.weights
    }, set weights(a) {
      if (a instanceof Array)f.weights = a.slice(); else {
        if (isNaN(a))return;
        f.weights = c(a, h.lgNum)
      }
      b()
    }, get lums() {
      return f.lums.map(function (a) {
        return 100 * a
      })
    }, set lums(a) {
      if (a instanceof Array)f.lums = a.map(function (a) {
        return a / 100
      }); else {
        if (isNaN(a))return;
        f.lums = c(a / 100, h.lgNum)
      }
      b()
    }, get tems() {
      return f.tems
    }, set tems(a) {
      if (a instanceof Array)f.tems = a.slice(); else {
        if (isNaN(a))return;
        f.tems = c(a, h.lgNum)
      }
      b()
    }, setABK: function (a, b, c) {
      return e.changeABK(a, b, c)
    }, restoreCamera: e.restoreCamera, get: function (a, b) {
      return f[a + "s"][b]
    }, set: function (a, c, d) {
      isNaN(d) || ("lum" == a && (d /= 100), void 0 == c || -1 == c ? h[a] = d : f[a + "s"][c] = d, b())
    }, set visible(a) {
      e.visible = a
    }
  }
}]), angular.module("br").controller("multiController", ["$scope", "glFactory", function (a, b) {
  a.mutable = !1, a.values = [], a.oriTitle = a.title, a.toggle = function (b) {
    b ? (a.onselect(void 0), a.onchange(a.value)) : a.showMenu = !a.showMenu
  }, a.getItemValue = function (a) {
    return this.values[this.items.indexOf(a)]
  }, a.onselect = function (b) {
    a.values[a.selectedIndex] = a.value, a.selectedIndex = b, a.title = a.items[b], a.value = a.values[b] || 0
  }, a.onchange = function (c) {
    var d, e = a.selectedIndex;
    c = parseInt(c), void 0 === e ? (a.value = (d = a.values = a.items.map(function () {
      return c
    }))[0], a.title = a.oriTitle, b[a.role + "s"] = d) : b.set(a.role, e, a.values[e] = c)
  }, a.$on("sceneChange", function () {
    a.title = a.oriTitle, a.selectedIndex = void 0
  }), a.$on("stateChange", function (c, d) {
    var e = a.role, f = e + "s";
    if (a.mutable = d.mutable, "tem" == e)a.min = d.temMin, a.max = d.temMax, a.step = d.temStep, b.tems = d.tems; else {
      if ("lum" != e)return;
      a.min = 0, a.max = 100, a.step = 1
    }
    b[f] = d[f], a.value = (a.values = b[f])[0]
  })
}]), angular.module("br").directive("multiRange", function () {
  return {
    restrict: "EA",
    replace: !0,
    scope: {
      iconSrc: "@iconSrc",
      title: "@title",
      unit: "@unit",
      value: "@value",
      role: "@role",
      min: "@min",
      max: "@max",
      step: "@step",
      items: "=items"
    },
    controller: "multiController",
    template: "<div class='multi-range'><div class='icon-range dropHeader drop'><img ng-src='{{iconSrc}}' ng-click='toggle(true)'><p ng-click='toggle()'>{{title}}</p><input type='range' ng-model='value' ng-disabled='!mutable'  ng-change='onchange(value)' min='{{min}}' max='{{max}}' step='{{step}}' ng-class=\"{true:'active',false:'inactive'}[mutable]\"><p>{{value}}{{unit}}</p></div><div ng-mouseleave='toggle()' class='menu' ng-show='showMenu&&items&&items.length'><p ng-repeat='item in items' data-item ng-click='onselect($index);'><b></b>{{item}}:{{getItemValue(item)}}{{unit}}</p></div></div>"
  }
});